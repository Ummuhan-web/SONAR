AWSTemplateFormatVersion: '2010-09-09'
Description: 'CFN Template for ALB, Auto Scaling, EC2, and Amazon Aurora DB with VPC Import for 3 AZs'

Parameters:
  ParentStackName:
    Description: "The name of the parent VPC stack"
    Type: String
    Default: "vpc-stack"
  
  InstanceType:
    Description: "EC2 instance type for the web server"
    Type: String
    Default: "t2.micro"
  
  KeyName:
    Description: "EC2 KeyPair for SSH access"
    Type: AWS::EC2::KeyPair::KeyName
    Default: "my-keypair"

  DBUsername:
    Description: "Aurora DB master username"
    Type: String
    Default: "admin"
  
  DBPassword:
    Description: "Aurora DB master password"
    Type: String
    NoEcho: true

Resources:
  # Import VPC resources from parent stack
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 'https://s3.amazonaws.com/my-bucket/vpc-stack.yaml'
      Parameters:
        StackName: !Ref ParentStackName

  # Security Group for ALB in public subnets
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB Security Group
      VpcId: !ImportValue
        Fn::Sub: "${ParentStackName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Security Group for EC2 instance and Aurora DB
  EC2DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 and DB Security Group
      VpcId: !ImportValue
        Fn::Sub: "${ParentStackName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2DBSecurityGroup
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # Adjust for your SSH IP range

  # Application Load Balancer
  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "My-ALB"
      Scheme: internet-facing
      Subnets:
        - !ImportValue
          Fn::Sub: "${ParentStackName}-PublicSubnetAZ1"
        - !ImportValue
          Fn::Sub: "${ParentStackName}-PublicSubnetAZ2"
        - !ImportValue
          Fn::Sub: "${ParentStackName}-PublicSubnetAZ3"
      SecurityGroups: 
        - !Ref ALBSecurityGroup

  # ALB Target Group
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue
        Fn::Sub: "${ParentStackName}-VPCID"
      Protocol: HTTP
      Port: 80
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      HealthCheckPath: /
      TargetType: instance

  # ALB Listener
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ALB
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      Port: 80
      Protocol: HTTP

  # Auto Scaling Group for EC2 Instances
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !ImportValue
          Fn::Sub: "${ParentStackName}-PublicSubnetAZ1"
        - !ImportValue
          Fn::Sub: "${ParentStackName}-PublicSubnetAZ2"
        - !ImportValue
          Fn::Sub: "${ParentStackName}-PublicSubnetAZ3"
      LaunchConfigurationName: !Ref EC2LaunchConfiguration
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      TargetGroupARNs:
        - !Ref ALBTargetGroup

  # Launch Configuration for EC2 instances
  EC2LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0c55b159cbfafe1f0  # Amazon Linux 2 AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref EC2DBSecurityGroup
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y httpd
          echo "Hello World" > /var/www/html/index.html
          sudo systemctl start httpd
          sudo systemctl enable httpd

  # Aurora DB Cluster
  AuroraDBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref EC2DBSecurityGroup

  # Aurora DB Instance
  AuroraDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref AuroraDBCluster
      DBInstanceClass: db.t3.medium
      Engine: aurora
      PubliclyAccessible: false

  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Aurora DB Subnet Group"
      SubnetIds:
        - !ImportValue
          Fn::Sub: "${ParentStackName}-DBSubnetAZ1"
        - !ImportValue
          Fn::Sub: "${ParentStackName}-DBSubnetAZ2"
        - !ImportValue
          Fn::Sub: "${ParentStackName}-DBSubnetAZ3"

Outputs:
  ALBEndpoint:
    Description: "The URL of the ALB"
    Value: 
      Fn::GetAtt: [ALB, DNSName]